type AccountIdText = text;
type AccountIdText__1 = text;
type Balance = variant { e6s : nat64; e8s : nat64 };
type Comment = record { ctime : int; user : principal; comment : text };
type Currency = variant { ICP; ICET };
type Currency__1 = variant { ICP; ICET };
type EscrowAccount = record { id : AccountIdText; index : Subaccount };
type EscrowService = service {
  accountBalance : (AccountIdText__1, Currency__1) -> (Balance);
  availableCycles : () -> (nat) query;
  buy : (NewOrder) -> (Result);
  cancel : (nat) -> (Result);
  changeItemStatus : (nat, ItemStatus) -> (Result);
  close : (nat) -> (Result);
  comment : (nat, text) -> (Result);
  create : (NewOrder) -> (Result);
  deleteItem : (nat) -> (Result);
  deliver : (nat) -> (Result);
  deposit : (nat) -> (Result);
  getAccountId : (nat) -> (text) query;
  getAllOrders : (nat) -> (vec Order);
  getBackupItems : () -> (vec U_Item) query;
  getBalanceBySub : (nat, Currency__1) -> (Balance);
  getItem : (nat) -> (opt Item) query;
  getItems : (nat) -> (vec Item) query;
  getItemsSize : () -> (nat) query;
  getMyAccountId : (nat) -> (text) query;
  getMyBalanceBySub : (nat, Currency__1) -> (Balance);
  getMyItems : (nat) -> (vec Item) query;
  getOrder : (nat) -> (opt Order);
  getOrders : () -> (vec Order);
  getSystemData : () -> (
      record { memory : nat; heap : nat; cycles : nat },
    ) query;
  listItem : (NewItem) -> (Result);
  receive : (nat) -> (Result);
  refund : (nat) -> (Result);
  release : (nat) -> (Result);
  searchItems : (Itype, nat) -> (vec Item) query;
  sell : (NewSellOrder) -> (Result);
};
type Item = record {
  id : nat;
  status : ItemStatus;
  listime : int;
  owner : principal;
  name : text;
  description : text;
  currency : variant { ICP; ICET };
  image : text;
  itype : Itype;
  price : nat64;
};
type ItemStatus = variant { pending; list; sold; unlist };
type Itype = variant { nft; "service"; merchandise; other; coin };
type Log = record {
  log : text;
  logger : variant { seller; buyer; escrow };
  ltime : int;
};
type NewItem = record {
  status : ItemStatus;
  name : text;
  description : text;
  currency : variant { ICP; ICET };
  image : text;
  itype : Itype;
  price : nat64;
};
type NewOrder = record {
  memo : text;
  seller : principal;
  expiration : int;
  currency : Currency;
  amount : nat64;
};
type NewSellOrder = record {
  memo : text;
  expiration : int;
  currency : Currency;
  buyer : principal;
  amount : nat64;
};
type Order = record {
  id : nat;
  status : Status;
  blockout : nat64;
  updatetime : int;
  blockin : nat64;
  logs : vec Log;
  memo : text;
  seller : principal;
  createtime : int;
  expiration : int;
  currency : Currency;
  lockedby : principal;
  account : EscrowAccount;
  buyer : principal;
  comments : vec Comment;
  amount : nat64;
};
type Result = variant { ok : nat; err : text };
type Status = variant {
  new;
  deposited;
  closed;
  canceled;
  refunded;
  released;
  delivered;
  received;
};
type Subaccount = nat;
type U_Item = record {
  id : nat;
  status : U_Status;
  listime : int;
  owner : principal;
  name : text;
  currency : variant { ICP; ICET };
  image : text;
  itype : U_Itype;
  price : nat64;
};
type U_Itype = variant { NFT; MERCHANDIS; SERVICE; OTHER };
type U_Status = variant { list; sold; locked : principal };
service : EscrowService